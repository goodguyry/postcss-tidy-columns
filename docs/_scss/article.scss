@use 'utilities' as *;
@use 'breakpoints' as bp;
@use 'layout';

/**
 * Styles the article elements.
 */

.article {
  @include layout.auto-margins;
  margin-bottom: rem(75);

  @media (bp.min(lg)) {
    /**
     * Quick and dirty full-width container.
     *
     * width: tidy-span(tidy-var(columns));
     */
    width: tidy-span(tidy-var(columns));
  }
}

.article__header {
  margin-bottom: rem(50);
}

.article-header__figure {
  display: grid;
  /**
   * Use the grlobal grid gap value for the header grid.
   *
   * tidy-var(gap)
   */
  gap: rem(10) tidy-var(gap);
  /**
   * tidy-span works well with grid when defining column widths.
   *
   * minmax(0, var(--figure-span, tidy-span(8)))
   */
  grid-template-columns: 1fr minmax(0, var(--figure-span, tidy-span(8))) 1fr;
  grid-template-rows: 1fr max-content;

  @media (bp.min(md)) {
    /**
     * The header intro should span 6 columns on medium screens.
     *
     * --figure-span: tidy-span(6);
     */
    --figure-span: tidy-span(6);
  }
}

.article-header__img {
  grid-column: 1 / -1;
  grid-row: 1;
  height: 100%;
  object-fit: cover;
  object-position: center;
}

.article-header__figcaption {
  @include layout.auto-margins;
  grid-column: 1 / -1;
  grid-row: 2;
  padding: rem(4) 0;
  /**
   * Make the caption full-width on small screens.
   *
   * width: tidy-span(tidy-var(columns));
   */
  width: tidy-span(tidy-var(columns));

  @media (bp.min(lg)) {
    grid-column: 3;
    text-align: right;
    width: 100%;
  }
}

.article-header__intro {
  @include layout.auto-margins;
  align-self: end;
  background-color: white;
  grid-column: 2;
  grid-row: 1;
  margin-bottom: rem(20);
  margin-top: rem(20);
  padding: rem(20) rem(12);
  position: relative;
  text-align: center;
  z-index: 1;

  @media (bp.min(lg)) {
    grid-row: 1 / -1;
    margin-bottom: 0;
    padding-left: rem(64);
    padding-right: rem(64);
  }

  > :where(p + p) {
    margin-top: layout.$vertical-rhythm;
  }
}
